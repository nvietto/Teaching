---
title: "{col2hcl}"
author: "Nicholas Vietto"
format: html
editor: source
toc: true
toc-location: left
toc-title: "Table of Contents"
theme: cerulean
self-contained: true
code-block-bg: true
code-block-border-left: "#29C5F6"
highlight-style: espresso
---

# Intro 

This is a super fast way to look up hexcode colors in R. Normally you'd have to head to a page like [this](https://www.nceas.ucsb.edu/sites/default/files/2020-04/colorPaletteCheatsheet.pdf) and squint until you find a color code that works. But there's another way thanks to the {Scales} package. 

# Steps and Vignette

**Install**

```{r}

# install.packages("scales")

library(scales)

```

## One color 

**Find a color**

```{r}

colors(distinct = TRUE)


```


**Use show_col and col2hcl**

If you know the color already. 

```{r}

show_col(col2hcl("royalblue"))


```


## More than one color

### Hue

If you want to vary the color slightly use the [*Hue*]{style="color:#4169E1;"} argument. 

::: {.callout-caution collapse="true"}
## Click to find out the definition of "Hue" üôà

Hue literally mean color üôâ

:::


```{r}

#üçÖ

tomatoes <- rep("tomato", 6) # we have to create a vector here to allow multiple to show
show_col(col2hcl(tomatoes, h = seq( 0, 25, length = 6))) 

```

Lets break this down. 

[*show_col*]{style="color:#4169E1;"} allows the visualization to occur in R

[*col2hcl*]{style="color:#4169E1;"} is the function that gives us the hex codes

* within this argument we throw in our vector (i.e, our üçÖ)
* Then we can modify our hue a bit wtih *seq* and any number between [0, 360]
* Keep the 0 in the beginning, and if you want a lot of similar colors keep the next number (or the range between the two) small. 

[*length*]{style="color:#4169E1;"} this just lets R know how many color we want to show. 


### Chroma

If you want the intensity to change we can use the [*chroma*]{style="color:#4169E1;"} argument. 

We use the identical process as before this time we use "c". The range for chroma is [0, 100]


::: {.callout-note}
We already created an our *tomatoes* object so we don't have to redefine it. 
:::

```{r}

show_col(col2hcl(tomatoes, c = seq( 0, 25, length = 6))) 

```

Let max the argument out and see what happens 

```{r}

show_col(col2hcl(tomatoes, c = seq( 0, 100, length = 6))) 

```

### Luminance 

If we want to look at variations in the intensity of light of our üçÖs we can use the *l* argument. 

Our luminescence range is [0, 100]


```{r}



show_col(col2hcl(tomatoes, l = seq( 0, 100, length = 6))) 


```

Hope that helps!

# References

[Modify standard R colour in hcl colour space](https://scales.r-lib.org/reference/col2hcl.html#ref-examples)

